// Copyright 2015 Google Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Definitions for meshes.

include "common.fbs";

namespace meshdef;

table Surface {
  indices:[ushort] (required);
  material:string (required);  // e.g. "materials/example.bin"
}

table Mesh {
  surfaces:[Surface] (required);

  positions:[fplbase.Vec3] (required);
  normals:[fplbase.Vec3];
  tangents:[fplbase.Vec4];  // Tangent + handedness.
  colors:[fplbase.Vec4ub];
  texcoords:[fplbase.Vec2];
  skin_indices:[fplbase.Vec4ub];  // reference bones
  skin_weights:[fplbase.Vec4ub];  // sum to 1
  max_position:fplbase.Vec3;
  min_position:fplbase.Vec3;
  bone_names:[string];          // For debugging.
  bone_transforms:[fplbase.Mat3x4]; // Local transform from parent to bone's pivot.
  bone_parents:[ubyte];         // Animation data must have the same hierarchy.
  shader_to_mesh_bones:[ubyte]; // Maps to the mesh bone index to the shader
                                // bone index. The mesh bones are all the bones.
                                // The shader bones are the subset of bones that
                                // have at least one vertex weighted to them.
}

root_type Mesh;
file_identifier "FMSH";
file_extension "fplmesh";

